[base]
# packet_score: 0.33, 0.47, 0.6, 0.73
# [1, 2, 3, 4]
detect_level=1
# inMbps: 0.01, 0.3, 0.6, 0.9
# cpuUsage: 30, 50, 70, 90
# [1, 2, 3, 4]
defense_level=1
# [auto, all]
defense_range=auto
# 0.2s, 200ms
sample_interval=0.2
# [1000] normal threshold(>=)
normal_threshold=1
# [no, yes] whether the host supports login
host_login_bool=yes
# [password, keyPair, publicKey] the value takes effect when host_login is yes
host_login_type=password
# [yes, no] whether the host information can be obtained
host_info_bool=yes
# [check, pass] the matching mode between the real-time statistic data and the known host info
# the check value takes effect when host_info is yes
host_info_match=pass
# [string, no] select target analysis hosts(mgmtIP) and nics(dataIP), or no
sel_analy_mgmtip=no
sel_analy_dataip=no
# [yes,no] check whether the data is updated
check_data_update=no
# [auto, asnc-dms, direct-dcube] select execute defense rule type
defense_execute_type=auto
# [On, Off] whether to enable direct defense
direct_defense_execute=On
# [On, Off] whether to save system output to mongoDB
save_output_mongodb=On
# [On, Off] whether to make system output available for grpc calls
call_output_grpc=Off

[database]
influxdb_select_num=5
influxdb_snding_login=172.17.17.27,8086,snding
influxdb_telegraf_login=172.17.17.27,8086,asn-dev
mongodb_snding_login=172.17.17.27,27017,snding
pcap_snding_login=172.17.17.27,/nfs-data2/snding/splitData
pcap_snding_dir=/nfs-data2/snding/splitData
pcap_python_analyzer_dir=./model/Pcap-Analyzer/app/utils/
pcap_golang_analyzer_dir=./model/pcapInfoParse1

[path]
host_login_path=./conf/system/host_login.csv
host_info_path=./res/hostInfo.csv
nodeid_save_path=./res/hostNodeID.csv
log_save_path=/nfs-data2/snding/log/snding.log
time_save_path=/nfs-data2/snding/log/dataTime.txt
strategy_record_path=/nfs-data2/snding/res/strategyRecords.csv
# remote asnc update rules path
asnc_update_rule_path=/nfs-data2/snding/res/updateRules.json
asnc_login_path=/nfs-data2/snding/key/asnc_login

[log]
log_save_size=100 MB
strategy_save_size=50 MB
strategy_read_rows=10000

[check]
select_ping_ip=.
delete_ping_ip=void
pingHeader=sudo ping -i 0.01 -W 0.5 -c
pingNum=10
localIP=localIP

[collection_tcpdump]
tcpdump_nic=any
tcpdump_timeG=0.2
tcpdump_texts=0
tcpdump_pcapName=#Y_#m#d_#H#M_#S-
# save source data(3min/1host)
fileNum_sourceSave_threshold=180

[collection_split]
# split 1w of a source pcap file
pcapSplit_unit=10000
# save split data(2min/1host)
fileNum_splitSave_threshold=120

[collection-hostStat]
hostSample_interval=0.2

[processing-pcapParse]
# pcap file minimum processing size, 100(B)
pcap_minsize_threshold=100
# small file threshold, default: 50 (MB)
sample_size_threshold1=50
# big file threshold, default: 200 (MB)
sample_size_threshold2=200
# middle file split unit, default: 50 (w) rows
pcap_split_count=50
# go pcap parse parameter setting
# source pcap is fully parsed
sample_numT1=0
# split pcap is fully parsed
sample_numT2=0
# source big pcap select sample number
sample_numT3=100000

[model-packet]
# 1) countTotal, &SampleNumT3, source big pcap select sample number
thresholdAR1=15000000, 100000, 10000, 4000
# 2) countType_length abnormal threshold
thresholdAR2=2000, 6, 500
# 3) countType_srcIP abnormal threshold
thresholdAR3=2000, 6, 255
# 4) countType_dstIP abnormal threshold
thresholdAR4=2000, 6, 255
# 5) countType_protocol abnormal threshold
thresholdAR5=2000, 6, 100
# 6) countType_srcPortTcp abnormal threshold
thresholdAR6=2000, 6, 100
# 7) countType_dstPortTcp abnormal threshold
thresholdAR7=2000, 6, 100
# 8) countType_srcPortUdp abnormal threshold
thresholdAR8=2000, 6, 100
# 9) countType_dstPortUdp abnormal threshold
thresholdAR9=2000, 6, 100
# 10) packet abnormal threshold
packet_thresholdAbn=0.3
# 11) r1m1a abn threshold
threshAttackMa=0.1

[model-netdev]
# 1) inMbps,  ethstats in Mbps
thresholdBR1=15000, 2000, 500, 100
# 2) inKpps,  ethstats in Kpps
thresholdBR2=15000, 100, 10, 4
# 3) outMbps,  ethstats in outMbps
thresholdBR3=15000, 2000, 500, 100
# 4) outKpps,  ethstats in outKpps
thresholdBR4=15000, 100, 10, 4
# 5) netdev abnormal threshold
netdev_thresholdAbn=0.05
# 6) r1m1b abn threshold
threshAttackMb=0.1

[model-resource]
# 1) cpuUsage
thresholdCR1=60, 30
# 2) incr_mem_swap
thresholdCR2=100, 30
# 3) incr_mem_virtual
thresholdCR3=100, 30
# 4) incr_tcpconn_full
thresholdCR4=100, 30
# 5) incr_tcpconn_semi
thresholdCR5=100, 30
# 6) incr_tcpconn_total
thresholdCR6=500, 100
# 7) resource abnormal threshold
resource_thresholdAbn=0.12

[trace]
interval_trace_max=0.1
count_trace_max=1000
protocol_attack_ratio=0.1
ipType_ratio_min=0.1
ipType_ratio_max=0.5
numType_ratio_min=0.1
numType_ratio_max=0.6
proType_ratio_min=0.1
proType_ratio_max=0.6

[trace-ip]
ip_deal_threshold=100
multiple_threshold=100
multiple_threshold1=200
multiple_threshold2=2
ip_cover_ratio=0.8
ip_seg_cover_threshold=100
ip_fw4_count_ratio=0.1
ip_fw3_count_ratio=0.2
ip_fw2_count_ratio=0.4
ip_rand_count_ratio=0.5
ip_rand_count_threshold=2

[ip-random]
bps_limit_ratio=0.5
pps_limit_ratio=0.5

[strategy]
# only the last 1h(3600s) rule is analyzed
strategy_analy_cycle=180
defense_routine_status=inactive
# tight direct rule limit ratio again
direct_limit_ratio=0.5
# relax coordinated rule limit ratio again
coordinated_limit_ratio=1.5

[alarm-setting]
intranet_alarm_defense=True
