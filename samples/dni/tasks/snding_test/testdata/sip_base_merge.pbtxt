input_stream: "PATH:0:pcap"
input_stream: "G_known_ip:0:known_ip"
input_stream: "NIC:host_nic_name"

output_stream: "G_Score:0:score"
output_stream: "G_Score1:0:score1"
output_stream: "G_Score2:0:score2"
output_stream: "G_Score3:0:score3"
output_stream: "G_Score4:0:score4"
output_stream: "G_max:0:max"
output_stream: "SIP:parsedips"
output_stream: "CIDR:0:sip_cidr_based_packets_merge"
output_stream: "CIDR:1:sip_dms_rules_prepare"

node {
    name: "A"
    task: "SndPcapParseTask"
    input_stream: "PATH:0:pcap"
    output_stream: "parsed_packets"
}

node {
    name: "B"
    task: "FeatureCounterTask"
    input_stream: "PATH:parsed_packets"
    output_stream: "SIP:0:sip_count"
    output_stream: "SPort:0:sport_count"
    output_stream: "DPort:0:dport_count"
    output_stream: "Protocol:0:protocol_count"
    output_stream: "Length:0:length_count"
    options {
    [type.asnapis.io/dni.FeatureCounterTaskOptions] {
        feature: "SIP"
        feature: "SPort"
        feature: "DPort"
        feature: "Protocol"
        feature: "Length"
    }
    }
}

node {
    name: "SIP"
    task: "SndNumberStatsTask"
    input_stream: "SIP_COUNT:0:sip_count"
    output_stream: "G_Score:0:score"
    options {
    [type.asnapis.io/dni.SndNumberStatsTaskOptions] {
        numValueSum: 10000
        ratioMin: 0.1
        ratioMax: 0.5
        score_thresholds: 0.6
        score_thresholds: 1.0
        score_thresholds: 0.8
        score_thresholds: 0
    }
    }
}

node {
    name: "SPort"
    task: "SndNumberStatsTask"
    input_stream: "SPort_COUNT:0:sport_count"
    output_stream: "G_Score1:0:score1"
    options {
    [type.asnapis.io/dni.SndNumberStatsTaskOptions] {
        numValueSum: 10000
        ratioMin: 0.1
        ratioMax: 0.6
        score_thresholds: 0.4
        score_thresholds: 1.0
        score_thresholds: 0.6
        score_thresholds: 0
    }
    }
}

node {
    name: "DPort"
    task: "SndNumberStatsTask"
    input_stream: "DPort_COUNT:0:dport_count"
    output_stream: "G_Score2:0:score2"
    options {
    [type.asnapis.io/dni.SndNumberStatsTaskOptions] {
        numValueSum: 10000
        ratioMin: 0.1
        ratioMax: 0.6
        score_thresholds: 0.4
        score_thresholds: 1.0
        score_thresholds: 0.6
        score_thresholds: 0
    }
    }
}

node {
    name: "Length"
    task: "SndNumberStatsTask"
    input_stream: "Length_COUNT:0:length_count"
    output_stream: "G_Score3:0:score3"
    options {
    [type.asnapis.io/dni.SndNumberStatsTaskOptions] {
        numValueSum: 10000
        ratioMin: 0.1
        ratioMax: 0.6
        score_thresholds: 0.4
        score_thresholds: 1.0
        score_thresholds: 0.6
        score_thresholds: 0
    }
    }
}

node {
    name: "Protocol"
    task: "SndProtocolStatsTask"
    input_stream: "Protocol_COUNT:0:protocol_count"
    output_stream: "G_Score4:0:score4"
    options {
    [type.asnapis.io/dni.SndProtocolStatsTaskOptions] {
        protoCountSum: 10000
        ratioMin: 0.1
        ratioMax: 0.6
        score_thresholds: 0.8
        score_thresholds: 0.6
        score_thresholds: 0
    }
    }
}

node {
    name: "max"
    task: "MaxTask"
    input_stream: "G_Score1:0:score1"
    input_stream: "G_Score2:0:score2"
    input_stream: "G_Score3:0:score3"
    output_stream: "G_max:0:max"
}                

node {
    name: "ipmerge"
    task: "SndAttackerIPMergeTask"
    input_stream: "SIP:0:sip_count"
    input_stream: "KNOWN_IPS:0:known_ip"
    output_stream: "G_parsedips:0:parsedips"
    options {
    [type.asnapis.io/dni.SndAttackerIPMergeTaskOptions] {
        ipFw4CountRatio: 0.1
        ipFw3CountRatio: 0.2
        ipSegCoverThreshold: 100
        ipFw2CountRatio: 0.4
        ipRandCountThreshold: 2
        ipRandCountRatio: 0.5
    }
    }
}

node {
    name: "sipbasemerge"
    task: "SndSIPBaseMergeTask"

    input_stream: "PACKET:parsed_packets"
    input_stream: "SIP:parsedips"
    input_stream: "NIC:host_nic_name"

    output_stream: "CIDR:0:sip_cidr_based_packets_merge"

    options {
        [type.asnapis.io/dni.SndSIPBaseMergeTaskOptions] {
            num_stat {
                ratioMin: 0.1
                ratioMax: 0.6
                label: "centralize"
                label: "regular"
                label: "random"
                label: "void"
            }
            proto_stat {
                ratioMin: 0.1
                ratioMax: 0.6
                label: "flood"
                label: "rapid"
                label: "void"
            }
        }
    }
}
